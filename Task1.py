
# Этап 1. REPL
# Цель: создать минимальный прототип. Большинство функций в нем пока
# представляют собой заглушки, но диалог с пользователем уже поддерживается.
# Требования:
# 1. Приложение должно быть реализовано в форме консольного интерфейса
# (CLI).
# 2. Приглашение к вводу должно содержать имя VFS.
# 3. Реализовать парсер, который поддерживает раскрытие переменных
# окружения реальной ОС (например, $HOME).
# 4. Сообщить об ошибке выполнения команд (неизвестная команда, неверные
# аргументы).
# 5. Реализовать команды-заглушки, которые выводят свое имя и аргументы: ls,
# cd.
# 6. Реализовать команду exit.
# 7. Продемонстрировать работу прототипа в интерактивном режиме.
# Необходимо показать примеры работы всей реализованной
# функциональности, включая обработку ошибок. |
# 8. Результат выполнения этапа сохранить в репозиторий стандартно
# оформленным коммитом.
import os

def act(a):

    b = a.split()
    if a == "exit":
        exit()
    if len(b) == 0:
        return ""
    if  len(b) > 1:
        if (os.environ.get(b[1]) != None):
            b[1] = os.environ.get(b[1])
    if b[0] == "ls":
        return b
    elif b[0] == "cd":
        return b
    else:
        return f"{b[0]}: command not found"

if __name__ == "__main__":
    while True:
        a = input("vfs@ ")
        result = act(a)
        if result:  # Чтобы не выводить пустые строки
            print(result)

